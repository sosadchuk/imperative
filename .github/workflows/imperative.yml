# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Imperative CI

on: [push, pull_request]

jobs:
  test:
    if: (github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository) && !contains(github.event.head_commit.message, '[ci skip]')
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        # Temporary workaround for regression in npm@8.11 and newer
        # node-version: [14.x, 16.x, 18.x]
        node-version: [14.x, 16.15.0, 18.2.0]
        os: [windows-latest, ubuntu-latest, macos-latest]

    env:
      OS: ${{ matrix.os }}
      NODE: ${{ matrix.node-version }}

    timeout-minutes: 60

    concurrency:
      group: ${{ matrix.os }}-node-${{ matrix.node-version }}-ci-${{ github.ref }}
      cancel-in-progress: true

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Dependencies
      run: npm ci

    - name: Update Dependencies
      uses: octorelease/run-script@master
      with:
        script: npmUpdate

    - name: Build Source
      id: build
      run: npm run build

    - name: Unit Tests
      if: ${{ always() && steps.build.outcome == 'success' }}
      run: npm run test:unit >> unit-tests.txt

    - name: Unlock Keyring
      if: ${{ always() && steps.build.outcome == 'success' && matrix.os == 'ubuntu-latest' }}
      uses: t1m0thyj/unlock-keyring@master

    - name: Integration Tests
      if: ${{ always() && steps.build.outcome == 'success' }}
      run: npm run test:integration >> integration-tests.txt

    - name: Archive Results
      if: ${{ always() && steps.build.outcome == 'success' }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-${{ matrix.node-version }}-results
        path: |
          __tests__/__results__/
          unit-tests.txt
          integration-tests.txt

    - name: Upload Results to Codecov
      if: ${{ always() && steps.build.outcome == 'success' }}
      uses: codecov/codecov-action@v3
      with:
        env_vars: OS,NODE

    - name: Get Sonar Scan Args
      id: sonar-scan-args
      if: ${{ always() && steps.build.outcome == 'success' && matrix.os == 'ubuntu-latest' }}
      uses: octorelease/run-script@master
      with:
        script: getSonarScanArgs

    - name: SonarCloud Scan
      if: ${{ always() && steps.build.outcome == 'success' && steps.sonar-scan-args.outputs.result != '' }}
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
      with:
        args: ${{ steps.sonar-scan-args.outputs.result }}

  release:
    if: github.event_name == 'push'
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        persist-credentials: false
        ref: ${{ github.ref }}

    - name: Use Node.js LTS
      uses: actions/setup-node@v2
      with:
        node-version: 'lts/*'

    - name: Install Dependencies
      run: npm ci

    - name: Update Dependencies
      uses: octorelease/run-script@master
      env:
        GIT_COMMITTER_NAME: ${{ secrets.ZOWE_ROBOT_USER }}
        GIT_COMMITTER_EMAIL: ${{ secrets.ZOWE_ROBOT_EMAIL }}
      with:
        script: npmUpdate

    - name: Build Source
      run: npm run build

    - uses: octorelease/octorelease@master
      env:
        GIT_COMMITTER_NAME: ${{ secrets.ZOWE_ROBOT_USER }}
        GIT_COMMITTER_EMAIL: ${{ secrets.ZOWE_ROBOT_EMAIL }}
        GIT_CREDENTIALS: x-access-token:${{ secrets.ZOWE_ROBOT_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
        NPM_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        NPM_EMAIL: ${{ secrets.ZOWE_ROBOT_EMAIL }}
